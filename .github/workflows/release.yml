name: Build and Push docker image

on:
  release:
    types: [published]

jobs:
  build-and-push-images:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: ./backend/Dockerfile
            image: ghcr.io/${{ github.repository_owner }}/trainstatus-backend
            tags: |
              ghcr.io/${{ github.repository_owner }}/trainstatus-backend:latest
              ghcr.io/${{ github.repository_owner }}/trainstatus-backend:${{ github.event.release.tag_name }}
          - dockerfile: ./frontend/Dockerfile
            image: ghcr.io/${{ github.repository_owner }}/trainstatus-frontend
            tags: |
              ghcr.io/${{ github.repository_owner }}/trainstatus-frontend:latest
              ghcr.io/${{ github.repository_owner }}/trainstatus-frontend:${{ github.event.release.tag_name }}
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.2.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ${{ matrix.image }}
          tags: ${{ matrix.tags }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5.3.0
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
        # with:
        #   context: .
        #   push: true
        #   tags: |
        #     ghcr.io/${{ github.repository_owner }}/racks_backend:latest
        #     ghcr.io/${{ github.repository_owner }}/racks_backend:${{ github.event.release.tag_name }}
