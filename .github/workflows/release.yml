name: Release

on:
  workflow_dispatch:
    inputs:
      type:
        required: true
        default: "patch"
        description: "Bump type"
        type: choice
        options:
          - patch
          - minor
          - major

permissions:
  packages: write
  contents: write

jobs:
  bump-version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.6

      - uses: pnpm/action-setup@v4
        with:
          version: 9.7.1
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 23.x
      # - name: Setup Rust
      #   uses: actions-rust-lang/setup-rust-toolchain@v1
      # - name: Install cargo-edit
      #   run: cargo install -f --no-default-features --features "set-version" cargo-edit
      - uses: cargo-bins/cargo-binstall@main
      - name: Install cargo-edit
        run: cargo binstall --no-confirm cargo-edit

      - name: Setup git
        run: |
          git config --global user.name 'Jonah'
          git config --global user.email '73760377+jonerrr@users.noreply.github.com'

      - name: Bump frontend version
        # id: bump_frontend_version
        working-directory: ./frontend
        run: |
          pnpm version ${{ github.event.inputs.type }} --no-git-tag-version
          echo "VERSION=$(node -p "require('./package.json').version")" >> "$GITHUB_ENV"

      - name: Bump backend version
        working-directory: ./backend
        run: |
          cargo set-version ${{ env.VERSION }}

      - name: Commit version changes
        run: |
          git add frontend/package.json backend/Cargo.toml backend/Cargo.lock
          git commit -m "ci: bump versions to ${{ env.VERSION }}"

      - name: Create Git Tag
        run: |
          git tag -a ${{ env.VERSION }} -m "Release ${{ env.VERSION }}"

      - name: Push changes
        run: |
          git push origin HEAD:master --follow-tags

      - name: Create a Release
        uses: elgohr/Github-Release-Action@v5
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          title: ${{ env.VERSION }}
          tag: ${{ env.VERSION }}
